{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard/src/components/StopWatch.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StopWatch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isRunning: false,\n      sec: 0,\n      min: 0,\n      hr: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        this.setState(prevState => ({\n          sec: prevState.sec += 1,\n          min: this.state.sec > 10 ? () => {\n            this.setState(p => ({\n              sec: p.sec - 60\n            }));\n            return prevState.min + 1;\n          } : prevState.min //         if (this.state.sec == 60) {\n          //      this.state.min = prevState.min + 1;\n          //      this.state.sec = 0;\n          //  }\n          //     if (this.state.min == 60) {\n          //     this.state.hr = prevState.hr + 1;\n          //     this.state.min = 0;\n          //     this.state.sec = 0;\n          //     }\n          // }))\n\n        }) // console.log(Date.now())\n        );\n      } // if (this.state.sec < 10 || this.state.sec == 0) {\n      // this.state.sec = '0' + this.state.sec;\n      // }\n      // if (this.state.min < 10 || this.state.min == 0) {\n      // this.state.min = '0' + this.state.min}\n      // if (this.state.hr < 10 || this.state.hr == 0) {\n      // this.state.hr = '0' + this.state.hr;\n      // }\n\n    };\n\n    this.handleStopwatch = () => {\n      console.log(\"handle watch\");\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning // sec:this.state.sec,\n\n      }));\n      console.log(this.state);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        sec: 0,\n        min: 0,\n        hr: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.state.isRunning && this.tick(), 100);\n  } // componentWillUnmount(){\n  //     clearInterval(this.intervalID)\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: [this.state.hr, \":\", this.state.min, \":\", this.state.sec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? \"Stop\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: this.resetTimer,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard/src/components/StopWatch.js"],"names":["React","StopWatch","Component","state","isRunning","sec","min","hr","tick","setState","prevState","p","handleStopwatch","console","log","resetTimer","componentDidMount","intervalID","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC5B;AACHC,MAAAA,SAAS,EAAC,KADP;AAEHC,MAAAA,GAAG,EAAC,CAFD;AAGHC,MAAAA,GAAG,EAAC,CAHD;AAIHC,MAAAA,EAAE,EAAC;AAJA,KAD4B;;AAAA,SAgBnCC,IAhBmC,GAgB5B,MAAI;AAEP,UAAG,KAAKL,KAAL,CAAWC,SAAd,EAAwB;AACpB,aAAKK,QAAL,CAAeC,SAAD,KAAc;AACxBL,UAAAA,GAAG,EAAGK,SAAS,CAACL,GAAV,IAAiB,CADC;AAExBC,UAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,GAAX,GAAiB,EAAjB,GAAqB,MAAI;AAC1B,iBAAKI,QAAL,CAAeE,CAAD,KAAM;AAChBN,cAAAA,GAAG,EAAEM,CAAC,CAACN,GAAF,GAAQ;AADG,aAAN,CAAd;AAGA,mBAAOK,SAAS,CAACJ,GAAV,GAAc,CAArB;AACH,WALI,GAKFI,SAAS,CAACJ,GAPW,CAQ5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AAlBwB,SAAd,CAAd,CAoBA;AApBA;AAqBE,OAxBC,CAyBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KAjD8B;;AAAA,SAmDnCM,eAnDmC,GAmDlB,MAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKL,QAAL,CAAcC,SAAS,KAAG;AACtBN,QAAAA,SAAS,EAAE,CAACM,SAAS,CAACN,SADA,CAEtB;;AAFsB,OAAH,CAAvB;AAKAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACP,KA3DsC;;AAAA,SA8DvCY,UA9DuC,GA8D3B,MAAK;AACb,WAAKN,QAAL,CAAc;AACVJ,QAAAA,GAAG,EAAC,CADM;AAEVC,QAAAA,GAAG,EAAC,CAFM;AAGVC,QAAAA,EAAE,EAAC;AAHO,OAAd;AAKH,KApEsC;AAAA;;AAQnCS,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAI,KAAKf,KAAL,CAAWC,SAAX,IAAwB,KAAKI,IAAL,EAA7B,EAA0C,GAA1C,CAA7B;AACH,GAVkC,CAYnC;AACA;AACA;;;AAwDJW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,mBAAkC,KAAKhB,KAAL,CAAWI,EAA7C,OAAkD,KAAKJ,KAAL,CAAWG,GAA7D,OAAmE,KAAKH,KAAL,CAAWE,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,EAAlB;AAAqB,QAAA,OAAO,EAAE,KAAKO,eAAnC;AAAA,kBAAqD,KAAKT,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AAArF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAQ,QAAA,SAAS,EAAC,EAAlB;AAAqB,QAAA,OAAO,EAAE,KAAKW,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAnFsC;;AAuFvC,eAAed,SAAf","sourcesContent":["import React from \"react\";\n\nclass StopWatch extends React.Component{\n    state ={\n        isRunning:false,\n        sec:0,\n        min:0,\n        hr:0\n    }\n\n    componentDidMount(){\n        this.intervalID = setInterval(()=>this.state.isRunning && this.tick(), 100)\n    }\n\n    // componentWillUnmount(){\n    //     clearInterval(this.intervalID)\n    // }\n\n    tick = ()=>{\n        \n        if(this.state.isRunning){\n            this.setState((prevState)=>({\n                sec:  prevState.sec += 1,\n                min: this.state.sec > 10? ()=>{\n                    this.setState((p)=>({\n                        sec: p.sec - 60\n                    }) )\n                    return prevState.min+1; \n                }: prevState.min\n            //         if (this.state.sec == 60) {\n            //      this.state.min = prevState.min + 1;\n            //      this.state.sec = 0;\n            //  }\n            //     if (this.state.min == 60) {\n            //     this.state.hr = prevState.hr + 1;\n            //     this.state.min = 0;\n            //     this.state.sec = 0;\n            //     }\n\n                // }))\n            })\n            // console.log(Date.now())\n            )}\n            // if (this.state.sec < 10 || this.state.sec == 0) {\n            // this.state.sec = '0' + this.state.sec;\n            // }\n            // if (this.state.min < 10 || this.state.min == 0) {\n            // this.state.min = '0' + this.state.min}\n            // if (this.state.hr < 10 || this.state.hr == 0) {\n            // this.state.hr = '0' + this.state.hr;\n            // }\n        }\n\n    handleStopwatch =()=>{\n        console.log(\"handle watch\")\n        this.setState(prevState=>({\n            isRunning: !prevState.isRunning,\n            // sec:this.state.sec,\n            \n        }))\n        console.log(this.state);\n}\n\n\nresetTimer =()=> {\n    this.setState({\n        sec:0,\n        min:0,\n        hr:0\n    })\n}\n\nrender (){\n    return (\n        <div className=\"stopwatch\">\n            <h2>Stopwatch</h2>\n            <span className=\"stopwatch-time\">{this.state.hr}:{this.state.min}:{this.state.sec}</span>\n            <button className=\"\" onClick={this.handleStopwatch}>{this.state.isRunning ? \"Stop\" : \"Start\"}</button>\n            {/* <button className=\"\" onClick={()=>this.stopTimer()}>Stop timer</button> */}\n            <button className=\"\" onClick={this.resetTimer}>Reset timer</button>\n            <div className=\"stopwatch\"></div>\n            {/* <Counter id={props.id} index={props.index} score={props.score} incrementScore={props.incrementScore} decrementScore={props.decrementScore}/> */}\n        </div>\n    )\n\n}\n    \n\n}\nexport default StopWatch"]},"metadata":{},"sourceType":"module"}