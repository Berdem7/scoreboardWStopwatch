{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboardWStopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Player from './components/Player'; // import Counter from './components/Counter';\n\nimport Header from './components/Header';\nimport AddPlayerComp from './components/AddPlayerComp';\nimport { useEffect, useState } from 'react'; // import StopWatch from './components/StopWatch';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [players, setPlayers] = useState([{\n    name: \"John\",\n    score: 15,\n    id: 1\n  }, {\n    name: \"Ben\",\n    score: 20,\n    id: 2\n  }, {\n    name: \"Jack\",\n    score: 50,\n    id: 3\n  }, {\n    name: \"Jane\",\n    score: 55,\n    id: 4\n  }, {\n    name: \"Lex\",\n    score: 15,\n    id: 5\n  }, {\n    name: \"Rex\",\n    score: 20,\n    id: 6\n  }, {\n    name: \"Pam\",\n    score: 50,\n    id: 7\n  }, {\n    name: \"Liam\",\n    score: 55,\n    id: 8\n  }]); //   state= {\n  //       players: [\n  //           {name:\"John\",\n  //           score:15,\n  //           id:1},\n  //           {name:\"Ben\",\n  //           score:20,\n  //           id:2},\n  //           {name:\"Jack\",\n  //           score:50,\n  //           id:3},\n  //           {name:\"Jane\",\n  //           score:55,\n  //           id:4},\n  //           {name:\"Lex\",\n  //           score:15,\n  //           id:5},\n  //           {name:\"Rex\",\n  //           score:20,\n  //           id:6},\n  //           {name:\"Pam\",\n  //           score:50,\n  //           id:7},\n  //           {name:\"Liam\",\n  //           score:55,\n  //           id:8}\n  //       ]\n  //   }\n\n  const deleteData = x => {\n    setPlayers(players.filter(index => index.id !== x)); //   players: prevState.players.filter(index=>index.id!==x)\n  }; // updateItem=()=>{\n  //   {this.state.players.map(\n  //     player=>\n  // <Player name ={player.name} score={player.score} key={player.id} id={player.id}/> )\n  // }}\n\n\n  const addPlayer = () => {\n    let nameX = document.getElementById(\"namex\").value;\n    let scoreX = parseInt(document.getElementById(\"pointx\").value);\n    let newPlayers = [...players];\n    let lastIndex = newPlayers.length - 1;\n    let idX = newPlayers[lastIndex].id + 1;\n    setPlayers([...players, {\n      name: nameX,\n      score: scoreX,\n      id: idX\n    }]);\n    document.getElementById(\"namex\").value = \"\";\n    document.getElementById(\"pointx\").value = \"\";\n  }; //   decrementScore(){\n  //     if(this.state.score>0){\n  //         this.setState((prevState)=>({\n  //             score: prevState.score-1\n  //         }))\n  //     }\n  // }\n\n\n  const incrementScore = (index, delta) => {\n    let updatedPlayers = [...players];\n    let updatedPlayer = players[index];\n    console.log(updatedPlayers[0].score);\n    updatedPlayer.score += delta;\n    players[index] = updatedPlayer;\n    setPlayers(updatedPlayers);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Scoreboard\",\n      totalPlayers: players.length,\n      totalPoints: players.reduce((total, player) => total + player.score, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n      name: player.name,\n      index: index,\n      score: player.score,\n      id: player.id,\n      deleteDataX: deleteData,\n      incrementScore: incrementScore\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(AddPlayerComp, {\n      addPlayer: addPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"UqyxjGeKB3a45D2gvSPfZ9ASGt8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboardWStopwatch/src/App.js"],"names":["React","Player","Header","AddPlayerComp","useEffect","useState","App","props","players","setPlayers","name","score","id","deleteData","x","filter","index","addPlayer","nameX","document","getElementById","value","scoreX","parseInt","newPlayers","lastIndex","length","idX","incrementScore","delta","updatedPlayers","updatedPlayer","console","log","reduce","total","player","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Player from './components/Player';\n// import Counter from './components/Counter';\nimport Header from './components/Header';\nimport AddPlayerComp from './components/AddPlayerComp';\nimport { useEffect, useState } from 'react';\n// import StopWatch from './components/StopWatch';\n\n\n\n\nfunction App (props){\n\n    const [players, setPlayers] = useState([\n        {name:\"John\",\n          score:15,\n          id:1},\n          {name:\"Ben\",\n          score:20,\n          id:2},\n          {name:\"Jack\",\n          score:50,\n          id:3},\n          {name:\"Jane\",\n          score:55,\n          id:4},\n          {name:\"Lex\",\n          score:15,\n          id:5},\n          {name:\"Rex\",\n          score:20,\n          id:6},\n          {name:\"Pam\",\n          score:50,\n          id:7},\n          {name:\"Liam\",\n          score:55,\n          id:8}\n    ])\n//   state= {\n//       players: [\n//           {name:\"John\",\n//           score:15,\n//           id:1},\n//           {name:\"Ben\",\n//           score:20,\n//           id:2},\n//           {name:\"Jack\",\n//           score:50,\n//           id:3},\n//           {name:\"Jane\",\n//           score:55,\n//           id:4},\n//           {name:\"Lex\",\n//           score:15,\n//           id:5},\n//           {name:\"Rex\",\n//           score:20,\n//           id:6},\n//           {name:\"Pam\",\n//           score:50,\n//           id:7},\n//           {name:\"Liam\",\n//           score:55,\n//           id:8}\n//       ]\n//   }\n\n  const deleteData=(x)=>{\n       setPlayers(players.filter(index=>index.id!==x))\n            //   players: prevState.players.filter(index=>index.id!==x)\n      }\n\n\n\n\n  // updateItem=()=>{\n  //   {this.state.players.map(\n  //     player=>\n  // <Player name ={player.name} score={player.score} key={player.id} id={player.id}/> )\n  // }}\n\n  const addPlayer=()=>{\n      let nameX = document.getElementById(\"namex\").value\n      let scoreX = parseInt(document.getElementById(\"pointx\").value)\n      let newPlayers = [...players]\n      let lastIndex = newPlayers.length-1\n      let idX = newPlayers[lastIndex].id+1\n        setPlayers([...players, {name:nameX, score:scoreX, id:idX}])\n        document.getElementById(\"namex\").value = \"\";\n        document.getElementById(\"pointx\").value = \"\";\n    }\n  \n    //   decrementScore(){\n    //     if(this.state.score>0){\n  \n    //         this.setState((prevState)=>({\n    //             score: prevState.score-1\n    //         }))\n    //     }\n    // }\n  \n    const incrementScore = (index, delta) =>{\n        let updatedPlayers = [...players]\n        let updatedPlayer = players[index]\n        console.log(updatedPlayers[0].score);\n        updatedPlayer.score += delta\n        players[index]=updatedPlayer\n\n        setPlayers(updatedPlayers)\n    }\n    \n      return(\n          <div className=\"scoreboard\">\n              {/* <StopWatch/> */}\n              <Header title=\"Scoreboard\" totalPlayers={players.length} totalPoints ={players.reduce((total,player)=>total+ player.score,0)}/>\n              {players.map(\n                  (player,index)=>\n              <Player name ={player.name} index={index} score={player.score} key={player.id} id={player.id} \n              deleteDataX = {deleteData} incrementScore={incrementScore}\n              />\n              )}\n              <AddPlayerComp addPlayer={addPlayer}/>\n\n          </div>\n      )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}