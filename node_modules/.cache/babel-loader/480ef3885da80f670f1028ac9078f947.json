{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Player from './components/Player'; // import Counter from './components/Counter';\n\nimport Header from './components/Header';\nimport AddPlayerComp from './components/AddPlayerComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      players: [{\n        name: \"John\",\n        score: 15,\n        id: 1\n      }, {\n        name: \"Ben\",\n        score: 20,\n        id: 2\n      }, {\n        name: \"Jack\",\n        score: 50,\n        id: 3\n      }, {\n        name: \"Jane\",\n        score: 55,\n        id: 4\n      }, {\n        name: \"Lex\",\n        score: 15,\n        id: 5\n      }, {\n        name: \"Rex\",\n        score: 20,\n        id: 6\n      }, {\n        name: \"Pam\",\n        score: 50,\n        id: 7\n      }, {\n        name: \"Liam\",\n        score: 55,\n        id: 8\n      }]\n    };\n\n    this.deleteData = x => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(index => index.id !== x)\n        };\n      });\n    };\n\n    this.addPlayer = () => {\n      let nameX = document.getElementById(\"namex\").value;\n      let scoreX = document.getElementById(\"pointx\").value;\n      let idX = document.getElementById(\"idx\").value;\n      this.setState(prevState => {\n        console.log(nameX);\n        console.log(scoreX);\n        console.log(idX);\n        let newPlayers = [...prevState.players, {\n          name: \"nameX\",\n          score: \"scoreX\",\n          id: \"idX\"\n        }];\n        return {// players:newPlayers\n        };\n      });\n    };\n\n    this.incrementScore = (index, delta) => {\n      this.setState(prevState => {\n        let updatedPlayers = [...prevState.players];\n        let updatedPlayer = updatedPlayers[index];\n        updatedPlayer.score += delta;\n        updatedPlayers[index] = updatedPlayer;\n        return {\n          players: updatedPlayers\n        }; // console.log(index);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Scoreboard\",\n        totalPlayers: this.state.players.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this), this.state.players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        name: player.name,\n        index: index,\n        score: player.score,\n        id: player.id,\n        deleteDataX: this.deleteData,\n        incrementScore: this.incrementScore,\n        decrementScore: this.decrementScore\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(AddPlayerComp, {\n        addPlayer: this.addPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard/src/App.js"],"names":["React","Player","Header","AddPlayerComp","App","Component","state","players","name","score","id","deleteData","x","setState","prevState","filter","index","addPlayer","nameX","document","getElementById","value","scoreX","idX","console","log","newPlayers","incrementScore","delta","updatedPlayers","updatedPlayer","render","length","map","player","decrementScore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Player from './components/Player';\n// import Counter from './components/Counter';\nimport Header from './components/Header';\nimport AddPlayerComp from './components/AddPlayerComp';\n\n\n\n\n\n\n\n\nclass App extends React.Component{\n\n  state= {\n      players: [\n          {name:\"John\",\n          score:15,\n          id:1},\n          {name:\"Ben\",\n          score:20,\n          id:2},\n          {name:\"Jack\",\n          score:50,\n          id:3},\n          {name:\"Jane\",\n          score:55,\n          id:4},\n          {name:\"Lex\",\n          score:15,\n          id:5},\n          {name:\"Rex\",\n          score:20,\n          id:6},\n          {name:\"Pam\",\n          score:50,\n          id:7},\n          {name:\"Liam\",\n          score:55,\n          id:8}\n      ]\n  }\n\n  deleteData=(x)=>{\n      this.setState(prevState=>{\n          \n          return {\n\n              players: prevState.players.filter(index=>index.id!==x)\n          }\n      })\n\n\n  }\n\n  // updateItem=()=>{\n  //   {this.state.players.map(\n  //     player=>\n  // <Player name ={player.name} score={player.score} key={player.id} id={player.id}/> )\n  // }}\n\n  addPlayer=()=>{\n      let nameX = document.getElementById(\"namex\").value\n      let scoreX = document.getElementById(\"pointx\").value\n      let idX = document.getElementById(\"idx\").value\n      this.setState(prevState=>{\n        console.log(nameX);\n        console.log(scoreX);\n        console.log(idX);\n        let newPlayers = [...prevState.players, {name:\"nameX\", score:\"scoreX\", id:\"idX\"}]\n        \n          return{\n              // players:newPlayers\n          }\n      })}\n  \n    //   decrementScore(){\n    //     if(this.state.score>0){\n  \n    //         this.setState((prevState)=>({\n    //             score: prevState.score-1\n    //         }))\n    //     }\n    // }\n  \n    incrementScore = (index, delta) =>{\n        this.setState(prevState=>{\n          let updatedPlayers = [...prevState.players]\n          let updatedPlayer = updatedPlayers[index]\n          updatedPlayer.score += delta\n          updatedPlayers[index]=updatedPlayer\n\n          return {\n            players: updatedPlayers\n          }\n          \n\n          // console.log(index);\n        })\n    }\n    \n  render(){\n      return(\n          <div className=\"scoreboard\">\n              <Header title=\"Scoreboard\" totalPlayers={this.state.players.length}/>\n              {this.state.players.map(\n                  (player,index)=>\n              <Player name ={player.name} index={index} score={player.score} key={player.id} id={player.id} \n              deleteDataX = {this.deleteData} incrementScore={this.incrementScore} decrementScore={this.decrementScore}\n              />\n              )}\n              <AddPlayerComp addPlayer={this.addPlayer}/>\n\n          </div>\n      )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}