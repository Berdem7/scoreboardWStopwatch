{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard/src/components/StopWatch.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StopWatch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isRunning: false,\n      sec: 0,\n      min: 0,\n      hr: 0\n    };\n\n    this.tick = () => {\n      console.log(\"rending: \" + this.state.isRunning);\n\n      if (this.state.isRunning) {\n        this.setState(prevState => {\n          this.state.sec = prevState.sec += 1;\n\n          if (this.state.sec == 60) {\n            this.state.min = prevState.min + 1;\n            this.state.sec = 0;\n          }\n\n          if (this.state.min == 60) {\n            this.state.hr = prevState.hr + 1;\n            this.state.min = 0;\n            this.state.sec = 0;\n          } // if (this.state.sec < 10 || this.state.sec == 0) {\n          // this.state.sec = '0' + this.state.sec;\n          // }\n          // if (this.state.min < 10 || this.state.min == 0) {\n          // this.state.min = '0' + this.state.min}\n          // if (this.state.hr < 10 || this.state.hr == 0) {\n          // this.state.hr = '0' + this.state.hr;\n          // }\n          // }))\n\n        } // console.log(Date.now())\n        );\n      }\n    };\n\n    this.handleStopwatch = () => {\n      console.log(\"handle watch\");\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning\n      }));\n      console.log(this.state.isRunning);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        time: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log();\n    this.intervalID = setInterval(() => this.state.isRunning ? this.tick() : () => {}, 100);\n  } // componentWillUnmount(){\n  //     clearInterval(this.intervalID)\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: [this.state.hr, \":\", this.state.min, \":\", this.state.sec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? \"Stop\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: this.resetTimer,\n        children: \"Reset timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard/src/components/StopWatch.js"],"names":["React","StopWatch","Component","state","isRunning","sec","min","hr","tick","console","log","setState","prevState","handleStopwatch","resetTimer","time","componentDidMount","intervalID","setInterval","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass StopWatch extends React.Component{\n    state ={\n        isRunning:false,\n        sec:0,\n        min:0,\n        hr:0\n    }\n\n    componentDidMount(){\n\n            console.log()\n        this.intervalID = setInterval(()=>this.state.isRunning ? this.tick():()=>{}, 100)\n\n    }\n\n    // componentWillUnmount(){\n    //     clearInterval(this.intervalID)\n    // }\n\n    tick = ()=>{\n        console.log(\"rending: \" + this.state.isRunning)\n        if(this.state.isRunning){\n            this.setState((prevState)=>{\n                this.state.sec = (prevState.sec += 1)\n\n                    if (this.state.sec == 60) {\n                 this.state.min = prevState.min + 1;\n                 this.state.sec = 0;\n             }\n                if (this.state.min == 60) {\n                this.state.hr = prevState.hr + 1;\n                this.state.min = 0;\n                this.state.sec = 0;\n                }\n\n                // if (this.state.sec < 10 || this.state.sec == 0) {\n                // this.state.sec = '0' + this.state.sec;\n                // }\n                // if (this.state.min < 10 || this.state.min == 0) {\n                // this.state.min = '0' + this.state.min}\n                // if (this.state.hr < 10 || this.state.hr == 0) {\n                // this.state.hr = '0' + this.state.hr;\n                // }\n            // }))\n        }\n        // console.log(Date.now())\n            )}}\n\n    handleStopwatch =()=>{\n        console.log(\"handle watch\")\n        this.setState(prevState=>({\n            isRunning: !prevState.isRunning\n        }))\n        console.log(this.state.isRunning);\n}\n\n\n// startTimer =()=> {\n//   if (this.stoptime == true) {\n//         this.stoptime = false;\n//         this.timerCycle();\n//     }\n// }\n// stopTimer =()=> {\n//   if (this.stoptime == false) {\n//     this.stoptime = true;\n//   }\n// }\n\n// timerCycle=()=> {\n//     if (this.stoptime == false) {\n//     this.sec = parseInt(this.sec);\n//     this.min = parseInt(this.min);\n//     this.hr = parseInt(this.hr);\n\n//     this.sec = this.sec + 1;\n\n//     if (this.sec == 60) {\n//       this.min = this.min + 1;\n//       this.sec = 0;\n//     }\n//     if (this.min == 60) {\n//       this.hr = this.hr + 1;\n//       this.min = 0;\n//       this.sec = 0;\n//     }\n\n//     if (this.sec < 10 || this.sec == 0) {\n//       this.sec = '0' + this.sec;\n//     }\n//     if (this.min < 10 || this.min == 0) {\n//       this.min = '0' + this.min;\n//     }\n//     if (this.hr < 10 || this.hr == 0) {\n//       this.hr = '0' + this.hr;\n//     }\n\n//     this.timer = this.hr + ':' + this.min + ':' + this.sec;\n\n//     this.setTimeout(\"timerCycle()\", 1000);\n//   }\n// }\n\nresetTimer =()=> {\n    this.setState({\n        time:0\n    })\n}\n\nrender (){\n    return (\n        <div className=\"stopwatch\">\n            <h2>Stopwatch</h2>\n            <span className=\"stopwatch-time\">{this.state.hr}:{this.state.min}:{this.state.sec}</span>\n            <button className=\"\" onClick={this.handleStopwatch}>{this.state.isRunning ? \"Stop\" : \"Start\"}</button>\n            {/* <button className=\"\" onClick={()=>this.stopTimer()}>Stop timer</button> */}\n            <button className=\"\" onClick={this.resetTimer}>Reset timer</button>\n            <div className=\"stopwatch\"></div>\n            {/* <Counter id={props.id} index={props.index} score={props.score} incrementScore={props.incrementScore} decrementScore={props.decrementScore}/> */}\n        </div>\n    )\n\n}\n    \n\n}\nexport default StopWatch"]},"metadata":{},"sourceType":"module"}